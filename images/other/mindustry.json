{
  "meta": {
    "api_version": 2
  },
  "uid": "mindustry",
  "name": "Mindustry",
  "author": "info@wilfredproject.org",
  "docker_image": "wilfreddev/java:17",
  "command": "java -Xms128M -Xmx{{SERVER_MEMORY}}M -jar server-release.jar config port {{SERVER_PORT}},config name {{image.env.SERVER_NAME}},host {{image.env.MAPNAME}}",
  "user": "container",
  "stop_command": "exit",
  "default_image": true,
  "config": {
    "files": []
  },
  "installation": {
    "docker_image": "wilfreddev/debian:stretch",
    "shell": "/bin/bash",
    "script": [
      "apt update",
      "apt install -y curl jq wget",
      "GITHUB_PACKAGE=Anuken/Mindustry",
      "MATCH=server-release.jar",
      "cd /server",
      "if [ -z ${DOWNLOAD_LINK} ]; then",
      "    if [ -z \"${GITHUB_USER}\" ] && [ -z \"${GITHUB_OAUTH_TOKEN}\" ] ; then",
      "        echo -e \"using anon api call\"",
      "    else",
      "        echo -e \"user and oauth token set\"",
      "        alias curl='curl -u ${GITHUB_USER}:${GITHUB_OAUTH_TOKEN} '",
      "    fi",
      "    LATEST_JSON=$(curl --silent \"https://api.github.com/repos/${GITHUB_PACKAGE}/releases/latest\")",
      "    RELEASES=$(curl --silent \"https://api.github.com/repos/${GITHUB_PACKAGE}/releases\")",
      "    if [ -z \"${VERSION}\" ] || [ \"${VERSION}\" == \"latest\" ]; then",
      "        DOWNLOAD_LINK=$(echo ${LATEST_JSON} | jq -r '.assets | .[].browser_download_url' | grep -i ${MATCH})",
      "    else",
      "        VERSION_CHECK=$(echo ${RELEASES} | jq -r --arg VERSION \"${VERSION}\" '.[] | select(.tag_name==$VERSION) | .tag_name')",
      "        if [ \"${VERSION}\" == \"${VERSION_CHECK}\" ]; then",
      "            DOWNLOAD_LINK=$(echo ${RELEASES} | jq -r --arg VERSION \"${VERSION}\" '.[] | select(.tag_name==$VERSION) | .assets[].browser_download_url' | grep -i ${MATCH})",
      "        else",
      "            echo -e \"defaulting to latest release\"",
      "            DOWNLOAD_LINK=$(echo ${LATEST_JSON} | jq .assets | jq -r .[].browser_download_url)",
      "        fi",
      "    fi",
      "else",
      "    echo -e \"Checking supplied download link\"",
      "    if curl --output /dev/null --silent --head --fail ${DOWNLOAD_LINK}; then",
      "        echo -e \"link is valid. setting download link to ${DOWNLOAD_LINK}\"",
      "    else",
      "        echo -e \"link is invalid closing out\"",
      "        exit 2",
      "    fi",
      "fi",
      "echo -e \"running: wget ${DOWNLOAD_LINK}\"",
      "wget ${DOWNLOAD_LINK}",
      "chown -R container:container /server"
    ]
  },
  "variables": [
    {
      "prompt": "Which version to use during install?",
      "variable": "VERSION",
      "install_only": true,
      "default": "latest",
      "hidden": false
    },
    {
      "prompt": "Which name should be shown in the server list?",
      "variable": "SERVER_NAME",
      "install_only": false,
      "default": "A wilfred hosted server",
      "hidden": false
    },
    {
      "prompt": "Which map should the server host?",
      "variable": "MAPNAME",
      "install_only": false,
      "default": "Tendrils",
      "hidden": false
    }
  ]
}
